"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _components = require("@wordpress/components");

var _compose = require("@wordpress/compose");

var _i18n = require("@wordpress/i18n");

var _blockPreview = _interopRequireDefault(require("../block-preview"));

var _inserterDraggableBlocks = _interopRequireDefault(require("../inserter-draggable-blocks"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function BlockPattern(_ref) {
  let {
    isDraggable,
    pattern,
    onClick,
    composite
  } = _ref;
  const {
    blocks,
    viewportWidth
  } = pattern;
  const instanceId = (0, _compose.useInstanceId)(BlockPattern);
  const descriptionId = `block-editor-block-patterns-list__item-description-${instanceId}`;
  return (0, _element.createElement)(_inserterDraggableBlocks.default, {
    isEnabled: isDraggable,
    blocks: blocks,
    isPattern: !!pattern
  }, _ref2 => {
    let {
      draggable,
      onDragStart,
      onDragEnd
    } = _ref2;
    return (0, _element.createElement)("div", {
      className: "block-editor-block-patterns-list__list-item",
      draggable: draggable,
      onDragStart: onDragStart,
      onDragEnd: onDragEnd
    }, (0, _element.createElement)(_components.__unstableCompositeItem, (0, _extends2.default)({
      role: "option",
      as: "div"
    }, composite, {
      className: "block-editor-block-patterns-list__item",
      onClick: () => onClick(pattern, blocks),
      "aria-label": pattern.title,
      "aria-describedby": pattern.description ? descriptionId : undefined
    }), (0, _element.createElement)(_blockPreview.default, {
      blocks: blocks,
      viewportWidth: viewportWidth
    }), (0, _element.createElement)("div", {
      className: "block-editor-block-patterns-list__item-title"
    }, pattern.title), !!pattern.description && (0, _element.createElement)(_components.VisuallyHidden, {
      id: descriptionId
    }, pattern.description)));
  });
}

function BlockPatternPlaceholder() {
  return (0, _element.createElement)("div", {
    className: "block-editor-block-patterns-list__item is-placeholder"
  });
}

function BlockPatternList(_ref3) {
  let {
    isDraggable,
    blockPatterns,
    shownPatterns,
    onClickPattern,
    orientation,
    label = (0, _i18n.__)('Block Patterns')
  } = _ref3;
  const composite = (0, _components.__unstableUseCompositeState)({
    orientation
  });
  return (0, _element.createElement)(_components.__unstableComposite, (0, _extends2.default)({}, composite, {
    role: "listbox",
    className: "block-editor-block-patterns-list",
    "aria-label": label
  }), blockPatterns.map(pattern => {
    const isShown = shownPatterns.includes(pattern);
    return isShown ? (0, _element.createElement)(BlockPattern, {
      key: pattern.name,
      pattern: pattern,
      onClick: onClickPattern,
      isDraggable: isDraggable,
      composite: composite
    }) : (0, _element.createElement)(BlockPatternPlaceholder, {
      key: pattern.name
    });
  }));
}

var _default = BlockPatternList;
exports.default = _default;
//# sourceMappingURL=index.js.map