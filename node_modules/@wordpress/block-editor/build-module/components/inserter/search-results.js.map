{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/search-results.js"],"names":["orderBy","isEmpty","useMemo","useEffect","__","_n","sprintf","VisuallyHidden","useDebounce","useAsyncList","speak","BlockTypesList","BlockPatternsList","__unstableInserterMenuExtension","InserterPanel","InserterNoResults","useInsertionPoint","usePatternsState","useBlockTypesState","searchBlockItems","searchItems","InserterListbox","INITIAL_INSERTER_RESULTS","EMPTY_ARRAY","InserterSearchResults","filterValue","onSelect","onHover","rootClientId","clientId","isAppender","__experimentalInsertionIndex","maxBlockPatterns","maxBlockTypes","showBlockDirectory","isDraggable","shouldFocusBlock","prioritizePatterns","debouncedSpeak","destinationRootClientId","onInsertBlocks","insertionIndex","blockTypes","blockTypeCategories","blockTypeCollections","onSelectBlockType","patterns","onSelectBlockPattern","filteredBlockPatterns","results","undefined","slice","maxBlockTypesToShow","length","filteredBlockTypes","count","resultsFoundMessage","currentShownBlockTypes","step","currentShownPatterns","hasItems","blocksUI","patternsUI","fills"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,QAAjC;AAEA;AACA;AACA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oBAAnC;AACA,SAASC,EAAT,EAAaC,EAAb,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA;AACA;AACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,+BAAP,MAA4C,4BAA5C;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gBAA9C;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AAEA,MAAMC,wBAAwB,GAAG,CAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,SAASC,qBAAT,OAcI;AAAA,MAd4B;AAC/BC,IAAAA,WAD+B;AAE/BC,IAAAA,QAF+B;AAG/BC,IAAAA,OAH+B;AAI/BC,IAAAA,YAJ+B;AAK/BC,IAAAA,QAL+B;AAM/BC,IAAAA,UAN+B;AAO/BC,IAAAA,4BAP+B;AAQ/BC,IAAAA,gBAR+B;AAS/BC,IAAAA,aAT+B;AAU/BC,IAAAA,kBAAkB,GAAG,KAVU;AAW/BC,IAAAA,WAAW,GAAG,IAXiB;AAY/BC,IAAAA,gBAAgB,GAAG,IAZY;AAa/BC,IAAAA;AAb+B,GAc5B;AACH,QAAMC,cAAc,GAAG9B,WAAW,CAAEE,KAAF,EAAS,GAAT,CAAlC;AAEA,QAAM,CAAE6B,uBAAF,EAA2BC,cAA3B,IAA8CxB,iBAAiB,CAAE;AACtEU,IAAAA,QADsE;AAEtEE,IAAAA,YAFsE;AAGtEC,IAAAA,QAHsE;AAItEC,IAAAA,UAJsE;AAKtEW,IAAAA,cAAc,EAAEV,4BALsD;AAMtEK,IAAAA;AANsE,GAAF,CAArE;AAQA,QAAM,CACLM,UADK,EAELC,mBAFK,EAGLC,oBAHK,EAILC,iBAJK,IAKF3B,kBAAkB,CAAEqB,uBAAF,EAA2BC,cAA3B,CALtB;AAMA,QAAM,CAAEM,QAAF,GAAcC,oBAAd,IAAuC9B,gBAAgB,CAC5DuB,cAD4D,EAE5DD,uBAF4D,CAA7D;AAKA,QAAMS,qBAAqB,GAAG9C,OAAO,CAAE,MAAM;AAC5C,QAAK8B,gBAAgB,KAAK,CAA1B,EAA8B;AAC7B,aAAO,EAAP;AACA;;AACD,UAAMiB,OAAO,GAAG7B,WAAW,CAAE0B,QAAF,EAAYrB,WAAZ,CAA3B;AACA,WAAOO,gBAAgB,KAAKkB,SAArB,GACJD,OAAO,CAACE,KAAR,CAAe,CAAf,EAAkBnB,gBAAlB,CADI,GAEJiB,OAFH;AAGA,GARoC,EAQlC,CAAExB,WAAF,EAAeqB,QAAf,EAAyBd,gBAAzB,CARkC,CAArC;AAUA,MAAIoB,mBAAmB,GAAGnB,aAA1B;;AACA,MAAKI,kBAAkB,IAAIW,qBAAqB,CAACK,MAAtB,GAA+B,CAA1D,EAA8D;AAC7DD,IAAAA,mBAAmB,GAAG,CAAtB;AACA;;AAED,QAAME,kBAAkB,GAAGpD,OAAO,CAAE,MAAM;AACzC,QAAKkD,mBAAmB,KAAK,CAA7B,EAAiC;AAChC,aAAO,EAAP;AACA;;AACD,UAAMH,OAAO,GAAG9B,gBAAgB,CAC/BnB,OAAO,CAAE0C,UAAF,EAAc,CAAE,UAAF,CAAd,EAA8B,CAAE,MAAF,CAA9B,CADwB,EAE/BC,mBAF+B,EAG/BC,oBAH+B,EAI/BnB,WAJ+B,CAAhC;AAOA,WAAO2B,mBAAmB,KAAKF,SAAxB,GACJD,OAAO,CAACE,KAAR,CAAe,CAAf,EAAkBC,mBAAlB,CADI,GAEJH,OAFH;AAGA,GAdiC,EAc/B,CACFxB,WADE,EAEFiB,UAFE,EAGFC,mBAHE,EAIFC,oBAJE,EAKFX,aALE,CAd+B,CAAlC,CArCG,CA2DH;;AACA9B,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAK,CAAEsB,WAAP,EAAqB;AACpB;AACA;;AACD,UAAM8B,KAAK,GAAGD,kBAAkB,CAACD,MAAnB,GAA4BL,qBAAqB,CAACK,MAAhE;AACA,UAAMG,mBAAmB,GAAGlD,OAAO;AAClC;AACAD,IAAAA,EAAE,CAAE,kBAAF,EAAsB,mBAAtB,EAA2CkD,KAA3C,CAFgC,EAGlCA,KAHkC,CAAnC;AAKAjB,IAAAA,cAAc,CAAEkB,mBAAF,CAAd;AACA,GAXQ,EAWN,CAAE/B,WAAF,EAAea,cAAf,CAXM,CAAT;AAaA,QAAMmB,sBAAsB,GAAGhD,YAAY,CAAE6C,kBAAF,EAAsB;AAChEI,IAAAA,IAAI,EAAEpC;AAD0D,GAAtB,CAA3C;AAGA,QAAMqC,oBAAoB,GAAGlD,YAAY,CACxCgD,sBAAsB,CAACJ,MAAvB,KAAkCC,kBAAkB,CAACD,MAArD,GACGL,qBADH,GAEGzB,WAHqC,CAAzC;AAMA,QAAMqC,QAAQ,GACb,CAAE3D,OAAO,CAAEqD,kBAAF,CAAT,IAAmC,CAAErD,OAAO,CAAE+C,qBAAF,CAD7C;AAGA,QAAMa,QAAQ,GAAG,CAAC,CAAEP,kBAAkB,CAACD,MAAtB,IAChB,cAAC,aAAD;AACC,IAAA,KAAK,EAAG,cAAC,cAAD,QAAkBjD,EAAE,CAAE,QAAF,CAApB;AADT,KAGC,cAAC,cAAD;AACC,IAAA,KAAK,EAAGqD,sBADT;AAEC,IAAA,QAAQ,EAAGZ,iBAFZ;AAGC,IAAA,OAAO,EAAGlB,OAHX;AAIC,IAAA,KAAK,EAAGvB,EAAE,CAAE,QAAF,CAJX;AAKC,IAAA,WAAW,EAAG+B;AALf,IAHD,CADD;AAcA,QAAM2B,UAAU,GAAG,CAAC,CAAEd,qBAAqB,CAACK,MAAzB,IAClB,cAAC,aAAD;AACC,IAAA,KAAK,EACJ,cAAC,cAAD,QAAkBjD,EAAE,CAAE,gBAAF,CAApB;AAFF,KAKC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,iBAAD;AACC,IAAA,aAAa,EAAGuD,oBADjB;AAEC,IAAA,aAAa,EAAGX,qBAFjB;AAGC,IAAA,cAAc,EAAGD,oBAHlB;AAIC,IAAA,WAAW,EAAGZ;AAJf,IADD,CALD,CADD;AAiBA,SACC,cAAC,eAAD,QACG,CAAED,kBAAF,IAAwB,CAAE0B,QAA1B,IAAsC,cAAC,iBAAD,OADzC,EAGGvB,kBAAkB,GAAGyB,UAAH,GAAgBD,QAHrC,EAKG,CAAC,CAAEP,kBAAkB,CAACD,MAAtB,IACD,CAAC,CAAEL,qBAAqB,CAACK,MADxB,IAEA;AAAK,IAAA,SAAS,EAAC;AAAf,IAPH,EAUGhB,kBAAkB,GAAGwB,QAAH,GAAcC,UAVnC,EAYG5B,kBAAkB,IACnB,cAAC,+BAAD,CAAiC,IAAjC;AACC,IAAA,SAAS,EAAG;AACXR,MAAAA,QAAQ,EAAEmB,iBADC;AAEXlB,MAAAA,OAFW;AAGXF,MAAAA,WAHW;AAIXmC,MAAAA,QAJW;AAKXhC,MAAAA,YAAY,EAAEW;AALH;AADb,KASKwB,KAAF,IAAa;AACd,QAAKA,KAAK,CAACV,MAAX,EAAoB;AACnB,aAAOU,KAAP;AACA;;AACD,QAAK,CAAEH,QAAP,EAAkB;AACjB,aAAO,cAAC,iBAAD,OAAP;AACA;;AACD,WAAO,IAAP;AACA,GAjBF,CAbF,CADD;AAoCA;;AAED,eAAepC,qBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { orderBy, isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { useDebounce, useAsyncList } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport BlockPatternsList from '../block-patterns-list';\nimport __unstableInserterMenuExtension from '../inserter-menu-extension';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useInsertionPoint from './hooks/use-insertion-point';\nimport usePatternsState from './hooks/use-patterns-state';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport { searchBlockItems, searchItems } from './search-items';\nimport InserterListbox from '../inserter-listbox';\n\nconst INITIAL_INSERTER_RESULTS = 9;\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nfunction InserterSearchResults( {\n\tfilterValue,\n\tonSelect,\n\tonHover,\n\trootClientId,\n\tclientId,\n\tisAppender,\n\t__experimentalInsertionIndex,\n\tmaxBlockPatterns,\n\tmaxBlockTypes,\n\tshowBlockDirectory = false,\n\tisDraggable = true,\n\tshouldFocusBlock = true,\n\tprioritizePatterns,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\n\tconst [ destinationRootClientId, onInsertBlocks ] = useInsertionPoint( {\n\t\tonSelect,\n\t\trootClientId,\n\t\tclientId,\n\t\tisAppender,\n\t\tinsertionIndex: __experimentalInsertionIndex,\n\t\tshouldFocusBlock,\n\t} );\n\tconst [\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tonSelectBlockType,\n\t] = useBlockTypesState( destinationRootClientId, onInsertBlocks );\n\tconst [ patterns, , onSelectBlockPattern ] = usePatternsState(\n\t\tonInsertBlocks,\n\t\tdestinationRootClientId\n\t);\n\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\tif ( maxBlockPatterns === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst results = searchItems( patterns, filterValue );\n\t\treturn maxBlockPatterns !== undefined\n\t\t\t? results.slice( 0, maxBlockPatterns )\n\t\t\t: results;\n\t}, [ filterValue, patterns, maxBlockPatterns ] );\n\n\tlet maxBlockTypesToShow = maxBlockTypes;\n\tif ( prioritizePatterns && filteredBlockPatterns.length > 2 ) {\n\t\tmaxBlockTypesToShow = 0;\n\t}\n\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( maxBlockTypesToShow === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst results = searchBlockItems(\n\t\t\torderBy( blockTypes, [ 'frecency' ], [ 'desc' ] ),\n\t\t\tblockTypeCategories,\n\t\t\tblockTypeCollections,\n\t\t\tfilterValue\n\t\t);\n\n\t\treturn maxBlockTypesToShow !== undefined\n\t\t\t? results.slice( 0, maxBlockTypesToShow )\n\t\t\t: results;\n\t}, [\n\t\tfilterValue,\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tmaxBlockTypes,\n\t] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = filteredBlockTypes.length + filteredBlockPatterns.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tconst currentShownBlockTypes = useAsyncList( filteredBlockTypes, {\n\t\tstep: INITIAL_INSERTER_RESULTS,\n\t} );\n\tconst currentShownPatterns = useAsyncList(\n\t\tcurrentShownBlockTypes.length === filteredBlockTypes.length\n\t\t\t? filteredBlockPatterns\n\t\t\t: EMPTY_ARRAY\n\t);\n\n\tconst hasItems =\n\t\t! isEmpty( filteredBlockTypes ) || ! isEmpty( filteredBlockPatterns );\n\n\tconst blocksUI = !! filteredBlockTypes.length && (\n\t\t<InserterPanel\n\t\t\ttitle={ <VisuallyHidden>{ __( 'Blocks' ) }</VisuallyHidden> }\n\t\t>\n\t\t\t<BlockTypesList\n\t\t\t\titems={ currentShownBlockTypes }\n\t\t\t\tonSelect={ onSelectBlockType }\n\t\t\t\tonHover={ onHover }\n\t\t\t\tlabel={ __( 'Blocks' ) }\n\t\t\t\tisDraggable={ isDraggable }\n\t\t\t/>\n\t\t</InserterPanel>\n\t);\n\n\tconst patternsUI = !! filteredBlockPatterns.length && (\n\t\t<InserterPanel\n\t\t\ttitle={\n\t\t\t\t<VisuallyHidden>{ __( 'Block Patterns' ) }</VisuallyHidden>\n\t\t\t}\n\t\t>\n\t\t\t<div className=\"block-editor-inserter__quick-inserter-patterns\">\n\t\t\t\t<BlockPatternsList\n\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\tonClickPattern={ onSelectBlockPattern }\n\t\t\t\t\tisDraggable={ isDraggable }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</InserterPanel>\n\t);\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t{ ! showBlockDirectory && ! hasItems && <InserterNoResults /> }\n\n\t\t\t{ prioritizePatterns ? patternsUI : blocksUI }\n\n\t\t\t{ !! filteredBlockTypes.length &&\n\t\t\t\t!! filteredBlockPatterns.length && (\n\t\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-separator\" />\n\t\t\t\t) }\n\n\t\t\t{ prioritizePatterns ? blocksUI : patternsUI }\n\n\t\t\t{ showBlockDirectory && (\n\t\t\t\t<__unstableInserterMenuExtension.Slot\n\t\t\t\t\tfillProps={ {\n\t\t\t\t\t\tonSelect: onSelectBlockType,\n\t\t\t\t\t\tonHover,\n\t\t\t\t\t\tfilterValue,\n\t\t\t\t\t\thasItems,\n\t\t\t\t\t\trootClientId: destinationRootClientId,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ ( fills ) => {\n\t\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\t\treturn fills;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\t\treturn <InserterNoResults />;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} }\n\t\t\t\t</__unstableInserterMenuExtension.Slot>\n\t\t\t) }\n\t\t</InserterListbox>\n\t);\n}\n\nexport default InserterSearchResults;\n"]}