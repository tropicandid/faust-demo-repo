import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import { View } from 'react-native';
/**
 * WordPress dependencies
 */

import { Children } from '@wordpress/element';
import { BottomSheetConsumer } from '@wordpress/components';
import warning from '@wordpress/warning';
/**
 * Internal dependencies
 */

import groups from './groups';
import useDisplayBlockControls from '../use-display-block-controls';
import { BlockSettingsButton } from '../block-settings';
export default function InspectorControlsFill(_ref) {
  var _groups$group;

  let {
    children,
    __experimentalGroup: group = 'default',
    ...props
  } = _ref;
  const isDisplayed = useDisplayBlockControls();
  const Fill = (_groups$group = groups[group]) === null || _groups$group === void 0 ? void 0 : _groups$group.Fill;

  if (!Fill) {
    typeof process !== "undefined" && process.env && process.env.NODE_ENV !== "production" ? warning(`Unknown InspectorControl group "${group}" provided.`) : void 0;
    return null;
  }

  if (!isDisplayed) {
    return null;
  }

  return createElement(Fragment, null, createElement(Fill, props, createElement(BottomSheetConsumer, null, () => createElement(View, null, children))), Children.count(children) > 0 && createElement(BlockSettingsButton, null));
}
//# sourceMappingURL=fill.native.js.map