{"version":3,"sources":["@wordpress/block-library/src/spacer/edit.native.js"],"names":["Spacer","attributes","context","setAttributes","isSelected","getStylesFromColorScheme","height","width","orientation","defaultStyle","styles","staticSpacer","staticDarkSpacer","convertedHeight","convertedWidth","selectedSpacer"],"mappings":";;;;;;;;;AAWA;;AARA;;AAKA;;AACA;;AACA;;AAMA;;AACA;;AAjBA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AAIA,MAAMA,MAAM,GAAG,QAMR;AAAA,MANU;AAChBC,IAAAA,UADgB;AAEhBC,IAAAA,OAFgB;AAGhBC,IAAAA,aAHgB;AAIhBC,IAAAA,UAJgB;AAKhBC,IAAAA;AALgB,GAMV;AACN,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBN,UAA1B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,OAAxB;AACA,QAAMO,YAAY,GAAGJ,wBAAwB,CAC5CK,sBAAOC,YADqC,EAE5CD,sBAAOE,gBAFqC,CAA7C;AAKA,0BAAW,MAAM;AAChB,QAAKJ,WAAW,KAAK,YAAhB,IAAgC,CAAED,KAAvC,EAA+C;AAC9CJ,MAAAA,aAAa,CAAE;AACdG,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,KAAK,EAAE;AAFO,OAAF,CAAb;AAIA;AACD,GAPD,EAOG,EAPH;AASA,QAAMM,eAAe,GAAG,wCAAwBP,MAAxB,CAAxB;AACA,QAAMQ,cAAc,GAAG,wCAAwBP,KAAxB,CAAvB;AAEA,SACC,4BAAC,iBAAD;AACC,IAAA,KAAK,EAAG,CACPE,YADO,EAEPL,UAAU,IAAIM,sBAAOK,cAFd,EAGP;AAAET,MAAAA,MAAM,EAAEO,eAAV;AAA2BN,MAAAA,KAAK,EAAEO;AAAlC,KAHO;AADT,KAOGV,UAAU,IACX,4BAAC,8BAAD,QACC,4BAAC,iBAAD;AACC,IAAA,UAAU,EAAGH,UADd;AAEC,IAAA,OAAO,EAAGC,OAFX;AAGC,IAAA,aAAa,EAAGC;AAHjB,IADD,CARF,CADD;AAmBA,CA9CD;;eAgDe,uCAA0BH,MAA1B,C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useConvertUnitToMobile } from '@wordpress/components';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Controls from './controls';\nimport styles from './editor.native.scss';\n\nconst Spacer = ( {\n\tattributes,\n\tcontext,\n\tsetAttributes,\n\tisSelected,\n\tgetStylesFromColorScheme,\n} ) => {\n\tconst { height, width } = attributes;\n\n\tconst { orientation } = context;\n\tconst defaultStyle = getStylesFromColorScheme(\n\t\tstyles.staticSpacer,\n\t\tstyles.staticDarkSpacer\n\t);\n\n\tuseEffect( () => {\n\t\tif ( orientation === 'horizontal' && ! width ) {\n\t\t\tsetAttributes( {\n\t\t\t\theight: '0px',\n\t\t\t\twidth: '72px',\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\tconst convertedHeight = useConvertUnitToMobile( height );\n\tconst convertedWidth = useConvertUnitToMobile( width );\n\n\treturn (\n\t\t<View\n\t\t\tstyle={ [\n\t\t\t\tdefaultStyle,\n\t\t\t\tisSelected && styles.selectedSpacer,\n\t\t\t\t{ height: convertedHeight, width: convertedWidth },\n\t\t\t] }\n\t\t>\n\t\t\t{ isSelected && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<Controls\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\tcontext={ context }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t/>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t</View>\n\t);\n};\n\nexport default withPreferredColorScheme( Spacer );\n"]}