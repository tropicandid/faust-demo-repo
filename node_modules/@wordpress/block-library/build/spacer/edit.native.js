"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _components = require("@wordpress/components");

var _compose = require("@wordpress/compose");

var _blockEditor = require("@wordpress/block-editor");

var _controls = _interopRequireDefault(require("./controls"));

var _editorNative = _interopRequireDefault(require("./editor.native.scss"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const Spacer = _ref => {
  let {
    attributes,
    context,
    setAttributes,
    isSelected,
    getStylesFromColorScheme
  } = _ref;
  const {
    height,
    width
  } = attributes;
  const {
    orientation
  } = context;
  const defaultStyle = getStylesFromColorScheme(_editorNative.default.staticSpacer, _editorNative.default.staticDarkSpacer);
  (0, _element.useEffect)(() => {
    if (orientation === 'horizontal' && !width) {
      setAttributes({
        height: '0px',
        width: '72px'
      });
    }
  }, []);
  const convertedHeight = (0, _components.useConvertUnitToMobile)(height);
  const convertedWidth = (0, _components.useConvertUnitToMobile)(width);
  return (0, _element.createElement)(_reactNative.View, {
    style: [defaultStyle, isSelected && _editorNative.default.selectedSpacer, {
      height: convertedHeight,
      width: convertedWidth
    }]
  }, isSelected && (0, _element.createElement)(_blockEditor.InspectorControls, null, (0, _element.createElement)(_controls.default, {
    attributes: attributes,
    context: context,
    setAttributes: setAttributes
  })));
};

var _default = (0, _compose.withPreferredColorScheme)(Spacer);

exports.default = _default;
//# sourceMappingURL=edit.native.js.map