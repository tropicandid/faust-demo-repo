"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolbarNode = exports.wpAdminBar = void 0;
const react_1 = __importStar(require("react"));
const classnames_1 = __importDefault(require("classnames"));
/**
 * Prefixes a given string with `wp-admin-bar-`.
 * This is needed in order for the WordPress core icons (Dashicons) to display.
 */
function wpAdminBar(id) {
    return id ? `wp-admin-bar-${id}` : '';
}
exports.wpAdminBar = wpAdminBar;
/**
 * The outermost element for a FaustToolbarNode.
 */
function ToolbarNode(_a) {
    var { id = '', children, additionalClassNames = '' } = _a, props = __rest(_a, ["id", "children", "additionalClassNames"]);
    const [hover, setHover] = (0, react_1.useState)(false);
    const handleKeyDown = (e) => {
        if (e.key === 'Enter') {
            setHover(!hover); // Toggle hover state when "Enter" is pressed
        }
        else if (e.key === 'Escape') {
            setHover(false); // Close the dropdown
        }
    };
    return (
    /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */
    react_1.default.createElement("li", Object.assign({ id: wpAdminBar(id), className: (0, classnames_1.default)('menupop', { hover }, additionalClassNames), onMouseEnter: () => setHover(true), onMouseLeave: () => setHover(false), onKeyDown: handleKeyDown }, props), children));
}
exports.ToolbarNode = ToolbarNode;
