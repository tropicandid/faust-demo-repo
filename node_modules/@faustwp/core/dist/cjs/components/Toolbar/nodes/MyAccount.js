"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyAccount = exports.AuthenticatedAccount = void 0;
const react_1 = __importDefault(require("react"));
const client_1 = require("@apollo/client");
const client_js_1 = require("../../../client.js");
const useLogout_js_1 = require("../../../hooks/useLogout.js");
const useAuth_js_1 = require("../../../hooks/useAuth.js");
const getAdminUrl_js_1 = require("../../../lib/getAdminUrl.js");
const index_js_1 = require("../index.js");
function AuthenticatedAccount() {
    var _a, _b, _c, _d, _e, _f, _g;
    const client = (0, client_js_1.getApolloAuthClient)();
    const { logout } = (0, useLogout_js_1.useLogout)();
    const { data, loading } = (0, client_1.useQuery)((0, client_1.gql) `
      {
        viewer {
          name
          username
          avatar26: avatar(size: 26) {
            url
          }
          avatar52: avatar(size: 52) {
            url
          }
          avatar64: avatar(size: 64) {
            url
          }
          avatar128: avatar(size: 128) {
            url
          }
        }
      }
    `, { client });
    if (loading) {
        return react_1.default.createElement(index_js_1.ToolbarNodeSkeleton, null);
    }
    const handleKeyDown = (e) => {
        if (e.key === 'Enter') {
            e.preventDefault();
            void logout();
        }
    };
    const handleClick = (e) => {
        e.preventDefault();
        void logout();
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(index_js_1.ToolbarItem, { "aria-haspopup": "true" },
            "Howdy, ",
            react_1.default.createElement("span", { className: "display-name" }, (_a = data === null || data === void 0 ? void 0 : data.viewer) === null || _a === void 0 ? void 0 : _a.name),
            react_1.default.createElement("img", { alt: "", src: (_b = data === null || data === void 0 ? void 0 : data.viewer) === null || _b === void 0 ? void 0 : _b.avatar26.url, srcSet: `${(_c = data === null || data === void 0 ? void 0 : data.viewer) === null || _c === void 0 ? void 0 : _c.avatar52.url} 2x`, className: "avatar avatar-26 photo", height: "26", width: "26", loading: "lazy", decoding: "async" })),
        react_1.default.createElement(index_js_1.ToolbarSubmenuWrapper, null,
            react_1.default.createElement(index_js_1.ToolbarSubmenu, { id: "wp-admin-bar-user-actions" },
                react_1.default.createElement("li", { id: "wp-admin-bar-user-info" },
                    react_1.default.createElement(index_js_1.ToolbarItem, { tabIndex: -1, href: (0, getAdminUrl_js_1.getAdminUrl)('profile.php') },
                        react_1.default.createElement("img", { alt: "", src: (_d = data === null || data === void 0 ? void 0 : data.viewer) === null || _d === void 0 ? void 0 : _d.avatar64.url, srcSet: `${(_e = data === null || data === void 0 ? void 0 : data.viewer) === null || _e === void 0 ? void 0 : _e.avatar128.url} 2x`, className: "avatar avatar-64 photo", height: "64", width: "64", loading: "lazy", decoding: "async" }),
                        react_1.default.createElement("span", { className: "display-name" }, (_f = data === null || data === void 0 ? void 0 : data.viewer) === null || _f === void 0 ? void 0 : _f.name),
                        react_1.default.createElement("span", { className: "username" }, (_g = data === null || data === void 0 ? void 0 : data.viewer) === null || _g === void 0 ? void 0 : _g.username))),
                react_1.default.createElement("li", { id: "wp-admin-bar-edit-profile" },
                    react_1.default.createElement(index_js_1.ToolbarItem, { href: (0, getAdminUrl_js_1.getAdminUrl)('profile.php') }, "Edit Profile")),
                react_1.default.createElement("li", { id: "wp-admin-bar-logout" },
                    react_1.default.createElement(index_js_1.ToolbarItem, { href: "#", onKeyDown: handleKeyDown, onClick: handleClick }, "Log Out"))))));
}
exports.AuthenticatedAccount = AuthenticatedAccount;
function MyAccount() {
    const { isAuthenticated, isReady } = (0, useAuth_js_1.useAuth)({
        strategy: 'redirect',
        shouldRedirect: false,
    });
    if (!isReady) {
        return react_1.default.createElement(index_js_1.ToolbarNodeSkeleton, null);
    }
    if (isAuthenticated === true) {
        return react_1.default.createElement(AuthenticatedAccount, null);
    }
    return null;
}
exports.MyAccount = MyAccount;
