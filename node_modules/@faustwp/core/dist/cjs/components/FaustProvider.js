"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FaustProvider = void 0;
const react_1 = __importStar(require("react"));
const client_1 = require("@apollo/client");
// eslint-disable-next-line import/extensions
const router_1 = require("next/router");
const client_js_1 = require("../client.js");
const index_js_1 = require("./Toolbar/index.js");
const index_js_2 = require("../config/index.js");
const FaustContext_js_1 = require("../store/FaustContext.js");
function FaustProvider(props) {
    const { pageProps, children } = props;
    const { experimentalToolbar } = (0, index_js_2.getConfig)();
    const router = (0, router_1.useRouter)();
    const apolloClient = (0, client_js_1.useApollo)(pageProps);
    const setQueries = (newQueries) => {
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        setFaustContext((prevContext) => {
            return Object.assign(Object.assign({}, prevContext), { queries: newQueries });
        });
    };
    const [faustContext, setFaustContext] = (0, react_1.useState)({
        // eslint-disable-next-line no-underscore-dangle
        queries: pageProps.__FAUST_QUERIES__,
        setQueries,
    });
    /**
     * On page transitions, reset the queries state based on the new page props.
     */
    (0, react_1.useEffect)(() => {
        // eslint-disable-next-line no-underscore-dangle
        if (pageProps.__FAUST_QUERIES__)
            setQueries(pageProps.__FAUST_QUERIES__);
        // eslint-disable-next-line no-underscore-dangle
    }, [pageProps.__FAUST_QUERIES__]);
    return (react_1.default.createElement(FaustContext_js_1.FaustContext.Provider, { value: faustContext },
        react_1.default.createElement(client_1.ApolloProvider, { client: apolloClient },
            experimentalToolbar && (react_1.default.createElement(index_js_1.Toolbar, { key: `faust-toolbar-${router.asPath}`, 
                // eslint-disable-next-line no-underscore-dangle
                seedNode: pageProps.__SEED_NODE__ })),
            children)));
}
exports.FaustProvider = FaustProvider;
