import { ApolloClient, NormalizedCacheObject } from '@apollo/client';
import { AppProps } from 'next/app';
export declare const APOLLO_STATE_PROP_NAME = "__APOLLO_STATE__";
declare global {
    interface Window {
        [APOLLO_STATE_PROP_NAME]: NormalizedCacheObject;
    }
}
export declare function createApolloClient(authenticated?: boolean): ApolloClient<NormalizedCacheObject>;
export declare function getApolloClient(initialState?: null): ApolloClient<NormalizedCacheObject>;
export declare function getApolloAuthClient(): ApolloClient<NormalizedCacheObject>;
export declare function addApolloState(client: ApolloClient<NormalizedCacheObject>, pageProps: AppProps<{
    props: {
        [key: string]: any;
    };
    revalidate?: number | boolean;
}>['pageProps']): AppProps<{
    props: {
        [key: string]: any;
    };
    revalidate?: number | boolean;
}>['pageProps'];
export declare function useApollo(pageProps: AppProps<{
    [key: string]: any;
}>['pageProps']): ApolloClient<NormalizedCacheObject>;
