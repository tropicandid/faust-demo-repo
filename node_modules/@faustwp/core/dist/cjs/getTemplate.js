"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTemplate = exports.getPossibleTemplates = void 0;
const index_js_1 = require("./wpHooks/index.js");
function getPossibleTemplates(node) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
    let possibleTemplates = [];
    if (((_a = node.template) === null || _a === void 0 ? void 0 : _a.templateName) && node.template.templateName !== 'Default') {
        possibleTemplates.push(`template-${node.template.templateName}`);
    }
    // Front page
    if (node.isFrontPage) {
        possibleTemplates.push('front-page');
    }
    // Blog page
    if (node.isPostsPage) {
        possibleTemplates.push('home');
    }
    // CPT archive page
    // eslint-disable-next-line no-underscore-dangle
    if (node.__typename === 'ContentType' && node.isPostsPage === false) {
        if (node.name) {
            possibleTemplates.push(`archive-${node.name}`);
        }
        possibleTemplates.push('archive');
    }
    // Archive Page
    if (node.isTermNode) {
        const { taxonomyName } = node;
        switch (taxonomyName) {
            case 'category': {
                if (node.slug) {
                    possibleTemplates.push(`category-${node.slug}`);
                }
                if (node.databaseId) {
                    possibleTemplates.push(`category-${node.databaseId}`);
                }
                possibleTemplates.push(`category`);
                break;
            }
            case 'post_tag': {
                if (node.slug) {
                    possibleTemplates.push(`tag-${node.slug}`);
                }
                if (node.databaseId) {
                    possibleTemplates.push(`tag-${node.databaseId}`);
                }
                possibleTemplates.push(`tag`);
                break;
            }
            default: {
                if (taxonomyName) {
                    if (node.slug) {
                        possibleTemplates.push(`taxonomy-${taxonomyName}-${node.slug}`);
                    }
                    if (node.databaseId) {
                        possibleTemplates.push(`taxonomy-${taxonomyName}-${node.databaseId}`);
                    }
                    possibleTemplates.push(`taxonomy-${taxonomyName}`);
                }
                possibleTemplates.push(`taxonomy`);
            }
        }
        possibleTemplates.push(`archive`);
    }
    if (node.userId) {
        if (node.name) {
            possibleTemplates.push(`author-${(_b = node.name) === null || _b === void 0 ? void 0 : _b.toLocaleLowerCase()}`);
        }
        possibleTemplates.push(`author-${node.userId}`);
        possibleTemplates.push(`author`);
        possibleTemplates.push(`archive`);
    }
    // Singular page
    if (node.isContentNode) {
        if (((_d = (_c = node === null || node === void 0 ? void 0 : node.contentType) === null || _c === void 0 ? void 0 : _c.node) === null || _d === void 0 ? void 0 : _d.name) !== 'page' &&
            ((_f = (_e = node === null || node === void 0 ? void 0 : node.contentType) === null || _e === void 0 ? void 0 : _e.node) === null || _f === void 0 ? void 0 : _f.name) !== 'post') {
            if (((_h = (_g = node.contentType) === null || _g === void 0 ? void 0 : _g.node) === null || _h === void 0 ? void 0 : _h.name) && node.slug) {
                possibleTemplates.push(`single-${(_k = (_j = node.contentType) === null || _j === void 0 ? void 0 : _j.node) === null || _k === void 0 ? void 0 : _k.name}-${node.slug}`);
            }
            if ((_m = (_l = node.contentType) === null || _l === void 0 ? void 0 : _l.node) === null || _m === void 0 ? void 0 : _m.name) {
                possibleTemplates.push(`single-${(_p = (_o = node.contentType) === null || _o === void 0 ? void 0 : _o.node) === null || _p === void 0 ? void 0 : _p.name}`);
            }
        }
        if (((_r = (_q = node === null || node === void 0 ? void 0 : node.contentType) === null || _q === void 0 ? void 0 : _q.node) === null || _r === void 0 ? void 0 : _r.name) === 'page') {
            if (node.slug) {
                possibleTemplates.push(`page-${node.slug}`);
            }
            if (node.databaseId) {
                possibleTemplates.push(`page-${node.databaseId}`);
            }
            possibleTemplates.push(`page`);
        }
        if (((_t = (_s = node === null || node === void 0 ? void 0 : node.contentType) === null || _s === void 0 ? void 0 : _s.node) === null || _t === void 0 ? void 0 : _t.name) === 'post') {
            if (node.slug) {
                possibleTemplates.push(`single-${node.contentType.node.name}-${node.slug}`);
            }
            possibleTemplates.push(`single-${node.contentType.node.name}`);
            possibleTemplates.push(`single`);
        }
        possibleTemplates.push(`singular`);
    }
    possibleTemplates.push('index');
    possibleTemplates = index_js_1.hooks.applyFilters('possibleTemplatesList', possibleTemplates, { seedNode: node });
    return possibleTemplates;
}
exports.getPossibleTemplates = getPossibleTemplates;
function getTemplate(seedNode, templates) {
    if (!seedNode) {
        return null;
    }
    const possibleTemplates = getPossibleTemplates(seedNode);
    // eslint-disable-next-line no-plusplus
    for (let i = 0; i < possibleTemplates.length; i++) {
        const possibleTemplate = possibleTemplates[i];
        if (templates[possibleTemplate]) {
            return templates[possibleTemplate];
        }
    }
    return null;
}
exports.getTemplate = getTemplate;
