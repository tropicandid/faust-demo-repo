import defaults from 'lodash/defaults.js';
import extend from 'lodash/extend.js';
import isString from 'lodash/isString.js';
import once from 'lodash/once.js';
import { hooks } from '../wpHooks/index.js';
let config;
export function setConfig(_config) {
    return once(() => {
        config = _config;
        const { experimentalPlugins: plugins } = _config;
        plugins === null || plugins === void 0 ? void 0 : plugins.forEach((plugin) => {
            var _a;
            (_a = plugin === null || plugin === void 0 ? void 0 : plugin.apply) === null || _a === void 0 ? void 0 : _a.call(plugin, hooks);
        });
    })();
}
export function normalizeConfig(_config) {
    const cfg = defaults({}, _config, {
        loginPagePath: '/login',
        experimentalToolbar: false,
        usePersistedQueries: false,
        useGETForQueries: true,
        basePath: '',
    });
    Object.keys(cfg).forEach((key) => {
        const keyValue = key;
        const value = cfg[keyValue];
        if (isString(value)) {
            cfg[keyValue] = value.trim();
        }
    });
    return extend(cfg, {});
}
export function getConfig() {
    return normalizeConfig(config);
}
