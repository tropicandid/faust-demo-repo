var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useState } from 'react';
import className from 'classnames';
/**
 * Prefixes a given string with `wp-admin-bar-`.
 * This is needed in order for the WordPress core icons (Dashicons) to display.
 */
export function wpAdminBar(id) {
    return id ? `wp-admin-bar-${id}` : '';
}
/**
 * The outermost element for a FaustToolbarNode.
 */
export function ToolbarNode(_a) {
    var { id = '', children, additionalClassNames = '' } = _a, props = __rest(_a, ["id", "children", "additionalClassNames"]);
    const [hover, setHover] = useState(false);
    const handleKeyDown = (e) => {
        if (e.key === 'Enter') {
            setHover(!hover); // Toggle hover state when "Enter" is pressed
        }
        else if (e.key === 'Escape') {
            setHover(false); // Close the dropdown
        }
    };
    return (
    /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */
    React.createElement("li", Object.assign({ id: wpAdminBar(id), className: className('menupop', { hover }, additionalClassNames), onMouseEnter: () => setHover(true), onMouseLeave: () => setHover(false), onKeyDown: handleKeyDown }, props), children));
}
