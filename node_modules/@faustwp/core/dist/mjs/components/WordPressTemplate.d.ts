import React, { PropsWithChildren } from 'react';
import { SeedNode } from '../queries/seedQuery.js';
import { FaustQueries } from '../store/FaustContext.js';
export type FaustProps = {
    __SEED_NODE__?: SeedNode | null;
    __FAUST_QUERIES__?: FaustQueries | null;
    __TEMPLATE_QUERY_DATA__?: any | null;
    __TEMPLATE_VARIABLES__?: {
        [key: string]: any;
    } | null;
};
export type WordPressTemplateProps = PropsWithChildren<FaustProps>;
/**
 * This is an external type for end users.
 * @external
 */
export type FaustTemplateProps<Data, Props = Record<string, never>> = Props & {
    data?: Data;
    loading?: boolean;
    __SEED_NODE__?: SeedNode | null;
    __TEMPLATE_QUERY_DATA__?: any | null;
    __TEMPLATE_VARIABLES__?: {
        [key: string]: any;
    };
};
export declare function WordPressTemplateInternal(props: WordPressTemplateProps & {
    seedNode: SeedNode;
    isPreview: boolean;
    isAuthenticated: boolean | null;
    loading: boolean;
    setLoading: (loading: boolean) => void;
}): React.FunctionComponentElement<{
    [key: string]: any;
}> | null;
export declare function WordPressTemplate(props: WordPressTemplateProps): React.JSX.Element | null;
