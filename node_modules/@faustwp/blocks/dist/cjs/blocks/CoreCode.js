"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreCode = void 0;
const client_1 = require("@apollo/client");
const react_1 = __importDefault(require("react"));
const WordPressBlocksProvider_js_1 = require("../components/WordPressBlocksProvider.js");
const index_js_1 = require("../utils/index.js");
function CoreCode(props) {
    var _a;
    const theme = (0, WordPressBlocksProvider_js_1.useBlocksTheme)();
    const style = (0, index_js_1.getStyles)(theme, Object.assign({}, props));
    const { attributes } = props;
    return (react_1.default.createElement("pre", { style: style, className: attributes === null || attributes === void 0 ? void 0 : attributes.cssClassName },
        react_1.default.createElement("code", { 
            // eslint-disable-next-line react/no-danger
            dangerouslySetInnerHTML: { __html: (_a = attributes === null || attributes === void 0 ? void 0 : attributes.content) !== null && _a !== void 0 ? _a : '' } })));
}
exports.CoreCode = CoreCode;
CoreCode.fragments = {
    key: `CoreCodeBlockFragment`,
    entry: (0, client_1.gql) `
    fragment CoreCodeBlockFragment on CoreCode {
      attributes {
        anchor
        backgroundColor
        borderColor
        className
        content
        cssClassName
        fontFamily
        fontSize
        gradient
        lock
        style
        textColor
      }
    }
  `,
};
CoreCode.config = {
    name: 'CoreCode',
};
CoreCode.displayName = 'CoreCode';
