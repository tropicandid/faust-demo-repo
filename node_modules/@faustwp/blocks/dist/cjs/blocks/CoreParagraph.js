"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreParagraph = void 0;
const react_1 = __importDefault(require("react"));
const client_1 = require("@apollo/client");
const getStyles_js_1 = require("../utils/get-styles/getStyles.js");
const WordPressBlocksProvider_js_1 = require("../components/WordPressBlocksProvider.js");
function CoreParagraph(props) {
    var _a;
    const theme = (0, WordPressBlocksProvider_js_1.useBlocksTheme)();
    const style = (0, getStyles_js_1.getStyles)(theme, Object.assign({}, props));
    const { attributes } = props;
    return (react_1.default.createElement("p", { style: style, className: attributes === null || attributes === void 0 ? void 0 : attributes.cssClassName, 
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: { __html: (_a = attributes === null || attributes === void 0 ? void 0 : attributes.content) !== null && _a !== void 0 ? _a : '' } }));
}
exports.CoreParagraph = CoreParagraph;
CoreParagraph.fragments = {
    key: `CoreParagraphBlockFragment`,
    entry: (0, client_1.gql) `
    fragment CoreParagraphBlockFragment on CoreParagraph {
      attributes {
        cssClassName
        backgroundColor
        content
        style
        textColor
        fontSize
        fontFamily
        direction
        dropCap
        gradient
        align
      }
    }
  `,
};
CoreParagraph.config = {
    name: 'CoreParagraph',
};
CoreParagraph.displayName = 'CoreParagraph';
