"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreColumns = void 0;
const react_1 = __importDefault(require("react"));
const client_1 = require("@apollo/client");
const getStyles_js_1 = require("../utils/get-styles/getStyles.js");
const WordPressBlocksProvider_js_1 = require("../components/WordPressBlocksProvider.js");
const WordPressBlocksViewer_js_1 = require("../components/WordPressBlocksViewer.js");
function CoreColumns(props) {
    const theme = (0, WordPressBlocksProvider_js_1.useBlocksTheme)();
    const style = (0, getStyles_js_1.getStyles)(theme, Object.assign({}, props));
    const { attributes, innerBlocks } = props;
    return (react_1.default.createElement("div", { style: style, className: attributes === null || attributes === void 0 ? void 0 : attributes.cssClassName },
        react_1.default.createElement(WordPressBlocksViewer_js_1.WordPressBlocksViewer, { blocks: innerBlocks !== null && innerBlocks !== void 0 ? innerBlocks : [] })));
}
exports.CoreColumns = CoreColumns;
CoreColumns.fragments = {
    key: `CoreColumnsBlockFragment`,
    entry: (0, client_1.gql) `
    fragment CoreColumnsBlockFragment on CoreColumns {
      attributes {
        align
        anchor
        layout
        cssClassName
        isStackedOnMobile
        verticalAlignment
        borderColor
        backgroundColor
        fontSize
        fontFamily
        style
        textColor
        gradient
      }
    }
  `,
};
CoreColumns.config = {
    name: 'CoreColumns',
};
CoreColumns.displayName = 'CoreColumns';
