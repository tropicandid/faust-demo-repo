import React from 'react';
export const WordPressBlocksContext = React.createContext(undefined);
export const WordPressThemeContext = React.createContext(undefined);
/**
 * WordPressBlocksProvider is used as a central store for the available list of WordPressBlock types.
 * @param props
 * @returns
 */
export function WordPressBlocksProvider(props) {
    const { children, config } = props;
    const { blocks, theme } = config;
    return (React.createElement(WordPressBlocksContext.Provider, { value: blocks },
        React.createElement(WordPressThemeContext.Provider, { value: theme }, children)));
}
/**
 * useBlocksTheme can be used to retrieve the theme
 * from within the WordPressBlocksProvider.
 *
 * @example
 * ```
 * const theme = useBlocksTheme();
 * ```
 */
export function useBlocksTheme() {
    const themeContext = React.useContext(WordPressThemeContext);
    // If it's an empty object, the provider hasn't been initialized.
    if (themeContext === undefined) {
        throw new Error('useBlocksTheme hook was called outside of context, make sure your app is wrapped with WordPressBlocksProvider');
    }
    return themeContext;
}
