import { gql } from '@apollo/client';
import React from 'react';
import { useBlocksTheme } from '../components/WordPressBlocksProvider.js';
import { getStyles } from '../utils/index.js';
export function CoreList(props) {
    const theme = useBlocksTheme();
    const style = getStyles(theme, Object.assign({}, props));
    const { attributes } = props;
    if (!(attributes === null || attributes === void 0 ? void 0 : attributes.values)) {
        return null;
    }
    const ListLevel = (attributes === null || attributes === void 0 ? void 0 : attributes.ordered) ? 'ol' : 'ul';
    return (React.createElement(ListLevel, { style: style, className: attributes === null || attributes === void 0 ? void 0 : attributes.cssClassName, reversed: (attributes === null || attributes === void 0 ? void 0 : attributes.ordered) && (attributes === null || attributes === void 0 ? void 0 : attributes.reversed) === true ? true : undefined, start: (attributes === null || attributes === void 0 ? void 0 : attributes.ordered) && (attributes === null || attributes === void 0 ? void 0 : attributes.start) ? attributes === null || attributes === void 0 ? void 0 : attributes.start : undefined, 
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: { __html: attributes.values } }));
}
CoreList.fragments = {
    key: `CoreListBlockFragment`,
    entry: gql `
    fragment CoreListBlockFragment on CoreList {
      attributes {
        anchor
        backgroundColor
        className
        fontFamily
        fontSize
        gradient
        lock
        ordered
        reversed
        start
        style
        textColor
        type
        values
        cssClassName
      }
    }
  `,
};
CoreList.config = {
    name: 'CoreList',
};
CoreList.displayName = 'CoreList';
