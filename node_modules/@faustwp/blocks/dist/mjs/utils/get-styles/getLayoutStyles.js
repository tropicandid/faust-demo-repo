/**
 *
 * Returns the specified block Layout Styles
 * @param theme Block Theme object
 * @returns React CSS Properties object
 */
export default function getLayoutStyles(theme, block) {
    const { attributes } = block;
    const styles = {};
    if (attributes === null || attributes === void 0 ? void 0 : attributes.width) {
        styles.flexBasis = attributes.width;
    }
    if (attributes === null || attributes === void 0 ? void 0 : attributes.height) {
        styles.height = attributes.height;
    }
    if (attributes === null || attributes === void 0 ? void 0 : attributes.layout) {
        let layout = {};
        try {
            layout = JSON.parse(attributes.layout);
        }
        catch (e) {
            return styles;
        }
        const contentSize = (layout === null || layout === void 0 ? void 0 : layout.contentSize) ? layout.contentSize : null;
        const wideSize = (layout === null || layout === void 0 ? void 0 : layout.wideSize) ? layout.wideSize : null;
        const justifyContent = (layout === null || layout === void 0 ? void 0 : layout.justifyContent)
            ? layout.justifyContent
            : 'center';
        const allMaxWidthValue = contentSize || wideSize;
        const marginLeft = justifyContent === 'left' ? '0 !important' : 'auto !important';
        const marginRight = justifyContent === 'right' ? '0 !important' : 'auto !important';
        if (contentSize || wideSize) {
            styles.maxWidth = allMaxWidthValue;
            styles.marginLeft = marginLeft;
            styles.marginRight = marginRight;
        }
    }
    return styles;
}
