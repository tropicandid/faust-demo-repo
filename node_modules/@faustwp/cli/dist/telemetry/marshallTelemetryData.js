import fs from 'fs';
import { getCliArgs } from '../utils/index.js';
/**
 * Sanitizes the version from a dependency in package.json.
 *
 * @param version The dependency version.
 * @returns A sanitized version or undefined if the version is a path.
 */
const sanitizePackageJsonVersion = (_version) => {
    let version = _version;
    if (!version) {
        return undefined;
    }
    if (version.charAt(0) === '^' || version.charAt(0) === '~') {
        version = version.substring(1);
    }
    /**
     * If a dependency is a file path set the value to undefined as we
     * don't want to collect file paths in telemetry
     */
    if (version.startsWith('file:')) {
        version = undefined;
    }
    return version;
};
/**
 * Marshall the JS telemetry data.
 * @param command Command that initiated the request
 */
export const marshallTelemetryData = (command) => {
    var _a, _b, _c, _d, _e, _f, _g;
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const telemetryData = {
        node_faustwp_core_version: sanitizePackageJsonVersion((_a = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _a === void 0 ? void 0 : _a['@faustwp/core']),
        node_faustwp_cli_version: sanitizePackageJsonVersion((_b = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _b === void 0 ? void 0 : _b['@faustwp/cli']),
        node_faustwp_blocks_version: sanitizePackageJsonVersion((_c = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _c === void 0 ? void 0 : _c['@faustwp/blocks']),
        node_faustwp_block_editor_utils_version: sanitizePackageJsonVersion((_d = packageJson === null || packageJson === void 0 ? void 0 : packageJson.devDependencies) === null || _d === void 0 ? void 0 : _d['@faustwp/block-editor-utils']),
        node_faustwp_experimental_app_router_version: sanitizePackageJsonVersion((_e = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _e === void 0 ? void 0 : _e['@faustwp/experimental-app-router']),
        node_apollo_client_version: sanitizePackageJsonVersion((_f = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _f === void 0 ? void 0 : _f['@apollo/client']),
        node_version: process.versions.node,
        node_next_version: sanitizePackageJsonVersion((_g = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _g === void 0 ? void 0 : _g.next),
        node_is_development: getCliArgs()[0] === 'dev',
        command,
    };
    return telemetryData;
};
